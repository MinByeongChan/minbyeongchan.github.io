{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm-BOJ-5622-post/","result":{"data":{"site":{"siteMetadata":{"title":"ByeongChan"}},"markdownRemark":{"id":"298603c1-0c91-5e00-b28f-fe05e6cb9e8c","excerpt":"Problem BOJ 5622 전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다. 숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다. 숫자 1을 걸려면 총…","html":"<h1>Problem</h1>\n<p><a href=\"https://www.acmicpc.net/problem/5622\">BOJ 5622</a></p>\n<p>전화를 걸고 싶은 번호가 있다면, 숫자를 하나를 누른 다음에 금속 핀이 있는 곳 까지 시계방향으로 돌려야 한다. 숫자를 하나 누르면 다이얼이 처음 위치로 돌아가고, 다음 숫자를 누르려면 다이얼을 처음 위치에서 다시 돌려야 한다.</p>\n<p>숫자 1을 걸려면 총 2초가 필요하다. 1보다 큰 수를 거는데 걸리는 시간은 이보다 더 걸리며, 한 칸 옆에 있는 숫자를 걸기 위해선 1초씩 더 걸린다.</p>\n<p>상근이의 할머니는 전화 번호를 각 숫자에 해당하는 문자로 외운다. 즉, 어떤 단어를 걸 때, 각 알파벳에 해당하는 숫자를 걸면 된다. 예를 들어, UNUCIC는 868242와 같다.</p>\n<p>할머니가 외운 단어가 주어졌을 때, 이 전화를 걸기 위해서 필요한 시간을 구하는 프로그램을 작성하시오.</p>\n<h1>Solution</h1>\n<p>이상한 문제였다. 간단히 설명하면, 다이얼을 돌리는데 시간걸리는 시간을 구하는 문제이다.</p>\n<p>1을 돌리는데 걸리는 시간을 2초가 걸리고, 옆의 숫자를 돌릴때마다 1초가 늘어난다. 단, 문제에 입력은 문자로 주어지는데 문자는 다이얼 번호 아래에 있는 문자가 해당 숫자를 의미한다.</p>\n<p>예를 들어 UIU = 848 이 된다.\n848을 돌리는데 걸리는 시간을 구하는 문제</p>\n<h2>Source</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nstring st<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> LEN<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> result<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">Check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">65</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">67</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">68</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">71</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">73</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">74</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">76</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">77</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">80</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">83</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">84</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">86</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">87</span> <span class=\"token operator\">&lt;=</span> s <span class=\"token operator\">&amp;&amp;</span> s <span class=\"token operator\">&lt;=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">></span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcin <span class=\"token operator\">>></span> st<span class=\"token punctuation\">;</span>\n\tLEN <span class=\"token operator\">=</span> st<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> LEN<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tresult <span class=\"token operator\">+=</span> <span class=\"token function\">Check</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> result<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이번에도 노가다 밖에 떠오르지 않아서 이렇게 풀었다. 문자열은 노가다 밖에 없단 말인가 ㅋㅋ</p>","frontmatter":{"title":"[백준] 5622 다이얼","date":"November 01, 2019","description":null}}},"pageContext":{"slug":"/algorithm-BOJ-5622-post/","previous":{"fields":{"slug":"/algorithm-hanium-1-post/"},"frontmatter":{"title":"[한이음 코딩테스트] 문제 1"}},"next":{"fields":{"slug":"/algorithm-BOJ-1316-post/"},"frontmatter":{"title":"[백준] 1316 그룹 단어 체커 (문자열)"}}}},"staticQueryHashes":["1246554614","2841359383"]}