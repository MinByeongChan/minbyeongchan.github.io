{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm-PRMS-12899-post/","result":{"data":{"site":{"siteMetadata":{"title":"ByeongChan"}},"markdownRemark":{"id":"b222519d-1bf8-59cd-bc37-b719d98d1db1","excerpt":"Problem PROGRAMMERS 124 나라의 숫자 124 나라가 있습니다. 124 나라에서는 10진법이 아닌 다음과 같은 자신들만의 규칙으로 수를 표현합니다. 124 나라에는 자연수만 존재합니다. 124 나라에는 모든 수를 표현할 때 1, 2, 4만 사용합니다. 예를 들어서 12…","html":"<h1>Problem</h1>\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/12899\">PROGRAMMERS 124 나라의 숫자</a></p>\n<p>124 나라가 있습니다. 124 나라에서는 10진법이 아닌 다음과 같은 자신들만의 규칙으로 수를 표현합니다.</p>\n<ol>\n<li>124 나라에는 자연수만 존재합니다.</li>\n<li>124 나라에는 모든 수를 표현할 때 1, 2, 4만 사용합니다.</li>\n</ol>\n<p>예를 들어서 124 나라에서 사용하는 숫자는 다음과 같이 변환됩니다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">10진법</th>\n<th align=\"center\">124나라</th>\n<th align=\"center\">10진법</th>\n<th align=\"center\">124나라</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">1</td>\n<td align=\"center\">6</td>\n<td align=\"center\">14</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">2</td>\n<td align=\"center\">7</td>\n<td align=\"center\">21</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">8</td>\n<td align=\"center\">22</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">11</td>\n<td align=\"center\">9</td>\n<td align=\"center\">24</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">12</td>\n<td align=\"center\">10</td>\n<td align=\"center\">41</td>\n</tr>\n</tbody>\n</table>\n<p>자연수 n이 매개변수로 주어질 때, n을 124 나라에서 사용하는 숫자로 바꾼 값을 return 하도록 solution 함수를 완성해 주세요.</p>\n<p><strong>제한 사항</strong></p>\n<blockquote>\n<p>n은 500,000,000이하의 자연수 입니다.</p>\n</blockquote>\n<h1>Solution</h1>\n<h2>문제 접근 순서</h2>\n<ol>\n<li>1, 2, 4 주기마다 숫자가 변화므로 진법을 이용해서 접근.</li>\n<li>3진법을 이용해서 풀려고 했는데 막힘.</li>\n<li>3에서 나누어 떨어지는 곳 마다 조건을 달리해서 접근.</li>\n</ol>\n<hr>\n<h2>문제 풀이</h2>\n<h3>진법 처리 부분</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">\tstring answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> v<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> remainder <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> n <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tremainder <span class=\"token operator\">=</span> n <span class=\"token operator\">%</span> x<span class=\"token punctuation\">;</span>\n\t\t\tn <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tremainder <span class=\"token operator\">=</span> n <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t\tn <span class=\"token operator\">/=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tv<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>remainder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\nv<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>진법을 처리하는 부분은 다음과 같이 적용했다.</p>\n<p>n을 계속 3으로 나누어주고 3이 나누어 떨어질때 문제가 발생했다.</p>\n<p>그래서 3으로 나눈 몫에 -1을 하여 진행시켰다.</p>\n<p>정수 10을 예로 들면,</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">식</th>\n<th align=\"center\">몫</th>\n<th align=\"center\">나머지</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">15 / 3</td>\n<td align=\"center\"><strong>5 - 1</strong></td>\n<td align=\"center\">0</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>4</strong> / 3</td>\n<td align=\"center\"><strong>1</strong></td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\"><strong>1</strong>/ 3</td>\n<td align=\"center\">0</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody>\n</table>\n<p>위 표를 보면 동작원리를 쉽게 알 수 있다. 진법이기 때문에 나머지를 정리해서 110이라는 결과를 낸다. 0은 “4”로 출력되어 114가 나오게 된다.</p>\n<hr>\n<h3>벡터 사용(시간초과)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> remainder <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> n <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tremainder <span class=\"token operator\">=</span> n <span class=\"token operator\">%</span> x<span class=\"token punctuation\">;</span>\n\t\t\tn <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tremainder <span class=\"token operator\">=</span> n <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t\tn <span class=\"token operator\">/=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tv<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>remainder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tv<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tv<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tanswer <span class=\"token operator\">+=</span> v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span></code></pre></div>\n<p>나머지 정리를 어떻게 해야하나 하다가 벡터를 받고 거꾸로 받아진 것을 다시 answer에 넣어서 출력했다.</p>\n<p>하지만 시간초과가 발생해서 멘붕…</p>\n<p>그래서 다른 방법을 찾다 insert라는 놈을 찾았다. string에서 원하는 위치에 문자열을 삽입할 수 있게 하는 STL이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">string s <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">;</span>\ns<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"HI, \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>insert는 매개변수 두 개(각각 삽입 위치, 삽입 내용)가 존재한다. 위처럼 insert를 하게 되면, s는 “HI, hello world”로 초기화된다.</p>\n<hr>\n<h3>벡터 사용(시간초과)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n\nstring <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tstring answer <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> remainder <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tanswer<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tanswer<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tn <span class=\"token operator\">/=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>방법은 동일하나 insert라는 놈을 적용해서 풀었다. 이렇게 했더니 5ms가 나왔던 testcase도 1ms로 줄어드는 것을 확인할 수 있었다.</p>\n<p>이 문제는 log3(N)으로 풀어야한다 하니 시간 효율성에서 너무 야박했다. 바위에 삽질한 기분이다. 힘들게 풀었는데도 몹시 찝찝하다.</p>\n<h1>Source</h1>\n<p><a href=\"https://github.com/MinByeongChan/myMBC/blob/master/Codetest/Programmers/12899_124World\">Github 전체소스</a></p>","frontmatter":{"title":"[프로그래머스] 124 나라의 숫자","date":"January 20, 2020","description":null}}},"pageContext":{"slug":"/algorithm-PRMS-12899-post/","previous":{"fields":{"slug":"/android-ch5-sharedpreferences-post/"},"frontmatter":{"title":"[Android] SharedPreferences, 앱 내부 데이터 저장"}},"next":{"fields":{"slug":"/android-ch6-coroutine-post/"},"frontmatter":{"title":"[Android] 코루틴 개념, 동작 원리"}}}},"staticQueryHashes":["1246554614","2841359383"]}