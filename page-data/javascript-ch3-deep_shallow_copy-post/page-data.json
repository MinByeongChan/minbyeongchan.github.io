{"componentChunkName":"component---src-templates-blog-post-js","path":"/javascript-ch3-deep_shallow_copy-post/","result":{"data":{"site":{"siteMetadata":{"title":"ByeongChan"}},"markdownRemark":{"id":"12e0da11-57d5-5895-9518-b8cafe14b7fb","excerpt":"JS에서는 얕은 복사, 깊은 복사 두가지로 나뉘는 방식으로 값 할당이 이뤄진다. 어떤건지 정리하고 넘어가자. 깊은 복사 a, b 두 변수는 완전히 독립된 변수이다. 2번 라인에서 b = a 이니 이라는 값이 할당된다. 위 코드에서 a에 다시 200을 할당했다. 이렇게 되면 a는 20…","html":"<p>JS에서는 얕은 복사, 깊은 복사 두가지로 나뉘는 방식으로 값 할당이 이뤄진다. 어떤건지 정리하고 넘어가자.</p>\n<h1>깊은 복사</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></code></pre></div>\n<p>a, b 두 변수는 완전히 독립된 변수이다. 2번 라인에서 b = a 이니 <code class=\"language-text\">a, b 둘다 100</code>이라는 값이 할당된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a\na <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드에서 a에 다시 200을 할당했다. 이렇게 되면 a는 200, b는 100이 나온다.</p>\n<p>이 결과로 두 변수가 <code class=\"language-text\">완전히 독립</code>되었다는 것을 알 수 있다. 두 변수에 별에 별짓을 해도 a는 b에, 또는 b는 a에 어떠한 영향을 미치지 않는다. 이것을 <code class=\"language-text\">깊은 복사</code>라고 한다.</p>\n<h1>객체의 복사</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> A_object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> B_object <span class=\"token operator\">=</span> A_object\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>A_object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>B_object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이번엔 객체이다. 위 number와 같이 A, B 두개의 오프젝트가 있고 할당을 시킨다. 결과는 동일하게 나올것이다.</p>\n<p>객체에 변수를 저장하면 실제 값을 저장하는 것이 아닌 객체를 메모리 어딘가에 만들고 객체의 위치값을 저장</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> A_object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\nA_object<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n\n<span class=\"token keyword\">var</span> B_object <span class=\"token operator\">=</span> A_object\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>A_object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>B_object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>다음은 A오브젝트의 a값을 변경시켜보자. A만 변경시켰을 뿐인데 B까지 변경되었다.</p>\n<p>JS에서 오브젝트는 <code class=\"language-text\">=</code>으로 깊은 복사가 되지 않는다. JS에서 오브젝트는 <code class=\"language-text\">참조에 의한</code> 복사가 이뤄진다. 값을 할당 받는 것이 아닌 A오브젝트의 <code class=\"language-text\">주소</code>값을 받게 된다.</p>\n<h2>객체의 깊은 복사</h2>\n<p>따라서, 단순히 <code class=\"language-text\">=</code>을 사용해서 복사할 수 없다. 객체에서의 깊은 복사를 하려면 별도의 함수를 만들어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token keyword\">in</span> obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    newObj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> newObj\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> A_object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> B_object <span class=\"token operator\">=</span> A_object <span class=\"token comment\">// 얕은 복사</span>\n<span class=\"token keyword\">var</span> cloned_object <span class=\"token operator\">=</span> <span class=\"token function\">deepCopy</span><span class=\"token punctuation\">(</span>A_object<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 깊은 복사</span>\nA_object<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>A_object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>B_object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>cloned_object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>별도의 함수를 만들었다. 오브젝트를 파라미터로 받고 안에서 하나하나 손수 새로운 오프젝트에 값을 할당시켜준다. 이렇게 새로운 오브젝트를 만들어 새로운 주소값을 갖는 하나의 객체를 만들어낸다.</p>","frontmatter":{"title":"[Javascript] 깊은복사와 얕은복사의 차이점","date":"August 17, 2020","description":null}}},"pageContext":{"slug":"/javascript-ch3-deep_shallow_copy-post/","previous":{"fields":{"slug":"/code-highlighting-post/"},"frontmatter":{"title":"Syntax Highlighting Post"}},"next":{"fields":{"slug":"/react-ch3--post/"},"frontmatter":{"title":"[React] React State, 컴포넌트의 상태 관리"}}}},"staticQueryHashes":["1246554614","2841359383"]}