{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-ch12-useEffect-post/","result":{"data":{"site":{"siteMetadata":{"title":"ByeongChan"}},"markdownRemark":{"id":"ec5de006-4bde-5385-b155-24d65227c8d0","excerpt":"useEffect를 사용하면 함수 컴포넌트에서 sideEffect를 수행할 수 있다. useEffect Hook을 componentDidMount와 componentDidUpdate, componentWillUnmount가 합쳐진 것으로 생각해도 좋습니다. -Multiple Effect…","html":"<p>useEffect를 사용하면 함수 컴포넌트에서 sideEffect를 수행할 수 있다.</p>\n<p>useEffect Hook을 componentDidMount와 componentDidUpdate, componentWillUnmount가 합쳐진 것으로 생각해도 좋습니다.</p>\n<p>-Multiple Effect\nclass메서드가 관련이 없는 로직들을 모아놓고 여러개의 메서드에 나누어 놓는 경우가 자주 있다.</p>\n<p>이러한 경우를 대비해서 Hook은 useEffect를 여러개 나누어 사용가능하도록 지원한다.</p>\n<ul>\n<li>useEffect을 사용하면 re-rendering??\nuseEffect는 기본적으로 업데이트를 다룬다. 업데이트를 위한 특별한 코드가 필요 X</li>\n</ul>\n<p>처음 state가 마운트 되고 업데이트가 A,B,C 차례로 이뤄난다면 useEffect는 업데이트 되는데로 순차적으로 동작한다.</p>\n<p>A-> useEffect , B-> useEffect , C-> useEffect</p>\n<p>모든 렌더링 이후 effect를 정리하거나 적용하는 것은 떄떄로 성능 저하를 발생시킬 수 있다.클래스 컴포넌트 경우에는 componentDidUpdate에서 prevProps, prevState와의 비교를 통해서 문제를 해결하기도 한다.</p>\n<p>이러한 기능도 Hook에서 지원한다.</p>\n<p>useEffect(() => {\ndocument.title = <code class=\"language-text\">You clicked ${count} times</code>;\n}, [count]);</p>\n<p>위의 예시에서 우리는 [count]를 두 번째 인수로 넘깁니다. 이것이 의미하는 바는 다음과 같습니다. 만약 count가 5이고 컴포넌트가 리렌더링된 이후에도 여전히 count는 변함없이 5라면 리액트는 이전 렌더링 시의 값 [5]를 그다음 렌더링 때의 [5]와 비교합니다. 배열 내의 모든 값이 같기 때문에(5 === 5) 리액트는 effect를 건너뛰게 됩니다. 이런 식으로 최적화가 가능합니다.</p>\n<p>count가 6으로 업데이트된 뒤에 렌더링하면 리액트는 이전에 렌더링된 값 [5]를 그다음 렌더링 시의 [6]와 비교합니다. 이때 5 !== 6 이기 때문에 리액트는 effect를 재실행합니다. 배열 내에 여러 개의 값이 있다면 그중의 단 하나만 다를지라도 리액트는 effect를 재실행합니다.</p>\n<p>이렇게 이전 state와 비교 작업을 통해 effect를 반드시 실행시키지 않을 수도 있다.</p>","frontmatter":{"title":"[React hook] useEffect 기본 개념, 사용법","date":"December 22, 2020","description":null}}},"pageContext":{"slug":"/react-ch12-useEffect-post/","previous":{"fields":{"slug":"/react-ch11-useState-post/"},"frontmatter":{"title":"[React hook] hook에 대한 정리, hook에서의 state관리 useState"}},"next":null}},"staticQueryHashes":["1246554614","2841359383"]}