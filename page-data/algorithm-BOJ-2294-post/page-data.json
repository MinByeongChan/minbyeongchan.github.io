{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm-BOJ-2294-post/","result":{"data":{"site":{"siteMetadata":{"title":"ByeongChan"}},"markdownRemark":{"id":"e83678d0-04fe-5430-901a-dc9c317dd311","excerpt":"Problem BOJ 2294 n가지 종류의 동전이 있다. 이 동전들을 적당히 사용해서, 그 가치의 합이 k…","html":"<h1>Problem</h1>\n<p><a href=\"https://www.acmicpc.net/problem/2294\">BOJ 2294</a></p>\n<p>n가지 종류의 동전이 있다. 이 동전들을 적당히 사용해서, 그 가치의 합이 k원이 되도록 하고 싶다. 그러면서 동전의 개수가 최소가 되도록 하려고 한다. 각각의 동전은 몇 개라도 사용할 수 있다.</p>\n<p>사용한 동전의 구성이 같은데, 순서만 다른 것은 같은 경우이다.</p>\n<h1>Solution 1</h1>\n<h2>문제 접근 순서</h2>\n<p>동전 1과는 다르게 배수로 접근할 수 없었던 문제였다. 숫자들은 임의로 주어지고, 어떻게든 최소의 횟수로 구하는 문제인데 DP가 가장 적합하다 생각했다.</p>\n<p>각설하고, 풀이방법은 다음과 같다.</p>\n<p>처음 DP배열을 생성하는데 최솟값을 구하기 위한 DP이므로 문제 조건에서 벗어나는 값을 초기화한다.</p>\n<p>비교를 하며 DP의 값을 최솟값으로 갱신해주는데 두가지 조건을 비교하며 갱신한다.</p>\n<ol>\n<li>DP[j+1]의 값을 그대로 가져가는 경우</li>\n<li>DP[j-coin[i]]가 최솟값을 가져가는 경우</li>\n</ol>\n<p>두 가지 비교조건을 사용하여 DP[j+1]을 계속 구해나아가고 마지막 인덱스인 DP[K]에서 최솟값을 구하면된다. 그래서 DP는 K+1로 설정을 해주어야한다. 하지만 항상 그렇게 하기 귀찮으니까 항상 문제조건보다 +1하는것이 편하다. 그러면 인덱스가 null pointer를 가리키지도 않는다.</p>\n<h3>예제 입력</h3>\n<h4>coin이 1일때,</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>DP1</strong></th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">…</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n<th align=\"center\">INF</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>DP2</strong></td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">5</td>\n<td align=\"center\">6</td>\n<td align=\"center\">7</td>\n<td align=\"center\">…</td>\n<td align=\"center\">13</td>\n<td align=\"center\">14</td>\n<td align=\"center\">15</td>\n</tr>\n</tbody>\n</table>\n<p>DP[0]은 무조건 0으로 해주어야한다. 그렇지 않으면 처음 최솟값을 구하지 못한다.</p>\n<p>DP[0]과 DP[1 - 1] + 1 과비교하게 된다. 만약 여기서 DP[1-1]이 INF이면 최솟값을 못하기 때문에 반드시 0으로 초기화시켜줘야한다.</p>\n<h4>coin이 5일때,</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>DP1</strong></th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\"><strong><code class=\"language-text\">6</code></strong></th>\n<th align=\"center\">7</th>\n<th align=\"center\">…</th>\n<th align=\"center\">13</th>\n<th align=\"center\">14</th>\n<th align=\"center\">15</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>DP2</strong></td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">1</td>\n<td align=\"center\"><strong><code class=\"language-text\">2</code></strong></td>\n<td align=\"center\">3</td>\n<td align=\"center\">…</td>\n<td align=\"center\">1</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n</tr>\n</tbody>\n</table>\n<p>DP[1]부터 스캔하는것이 아닌 coin[i]부터 시작하게 된다. coin이 5니까 DP[5]부터 시작하게 되는데, DP[5-5]+1 은 2이므로 위에 6보다 더 작다. 그러므로 최솟값을 갱신하게 된다.</p>\n<p>이러한 방식으로 계속해서 coin을 기준으로 계속해서 최솟값을 갱신하게 된다.</p>\n<h3>Source 1</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> coin<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> K<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tdp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  dp<span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> coin<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>답지를 보고 힌트를 얻은 문제였다. 드릅게 어렵다.</p>","frontmatter":{"title":"[백준] 2294 동전2","date":"December 18, 2019","description":null}}},"pageContext":{"slug":"/algorithm-BOJ-2294-post/","previous":{"fields":{"slug":"/algorithm-BOJ-1806-post/"},"frontmatter":{"title":"[백준] 1806 부분합"}},"next":{"fields":{"slug":"/android-ch1-recyclerview-post/"},"frontmatter":{"title":"[Android] RecyclerView의 개념 및 사용법"}}}},"staticQueryHashes":["1246554614","2841359383"]}