{"version":3,"sources":["webpack:///./src/templates/blog-list.tsx"],"names":["BlogIndex","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","console","log","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","display","flexWrap","justifyContent","listStyle","padding","rel","pageQuery"],"mappings":"4FAAA,0HAmHeA,UAjFG,SAAC,GAIiB,IAHlCC,EAGkC,EAHlCA,KACAC,EAEkC,EAFlCA,SACAC,EACkC,EADlCA,YAEMC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAC7BC,EAA0BR,EAA1BQ,YAAaC,EAAaT,EAAbS,SAEfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,IAAxB,KAAmCA,EAAc,GAAGK,WAC/DC,EAAW,KAAKN,EAAc,GAAGK,WASvC,OAPAE,QAAQC,IAAR,iBAA6BR,GAC7BO,QAAQC,IAAR,cAA0BP,GAC1BM,QAAQC,IAAR,aAAyBN,GACzBK,QAAQC,IAAR,YAAwBL,GACxBI,QAAQC,IAAR,cAA0BJ,GAC1BG,QAAQC,IAAR,cAA0BF,GAGxB,kBAAC,IAAD,CAAQf,SAAUA,EAAUK,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMY,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNd,EAAQc,EAAKC,YAAYf,OAASc,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKE,OAAOC,MACjDjB,IAGL,+BAAQc,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,gBAQzD,6BACE,wBACET,MAAO,CACLU,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,6BACI3B,GACA,kBAAC,OAAD,CAAMiB,GAAIf,EAAU0B,IAAI,QAAxB,oBAKJ,6BACI3B,GACA,kBAAC,OAAD,CAAMgB,GAAIb,EAAUwB,IAAI,QAAxB,oBAaP,IAAMC,EAAY","file":"component---src-templates-blog-list-tsx-08b324c96cfb922476e3.js","sourcesContent":["// Gatsby supports TypeScript natively!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\ntype PageContext = {\r\n  currentPage: number\r\n  numPages: number\r\n}\r\ntype Data = {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  allMarkdownRemark: {\r\n    edges: {\r\n      node: {\r\n        excerpt: string\r\n        frontmatter: {\r\n          title: string\r\n          date: string\r\n          description: string\r\n        }\r\n        fields: {\r\n          slug: string\r\n        }\r\n      }\r\n    }[]\r\n  }\r\n}\r\n\r\nconst BlogIndex = ({\r\n  data,\r\n  location,\r\n  pageContext,\r\n}: PageProps<Data, PageContext>) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n  const { currentPage, numPages } = pageContext\r\n\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? \"/\" : `/${(currentPage - 1).toString()}`\r\n  const nextPage = `/${(currentPage + 1).toString()}`\r\n\r\n  console.log(`currentPage : ${currentPage}`);\r\n  console.log(`numPages : ${numPages}`);\r\n  console.log(`isFirst : ${isFirst}`);\r\n  console.log(`isLast : ${isLast}`);\r\n  console.log(`prevPage : ${prevPage}`);\r\n  console.log(`nextPage : ${nextPage}`);\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        )\r\n      })}\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {!isFirst && (\r\n              <Link to={prevPage} rel=\"prev\">\r\n                ← Previous Page\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {!isLast && (\r\n              <Link to={nextPage} rel=\"next\">\r\n                Next Page →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPageQuery($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}